<?php

namespace My\CMSBundle\Repository;

use My\BackendBundle\Repository\FilterRepository;

/**
 * CMSMenuRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CMSMenuRepository extends FilterRepository
{
    /**
     * Get menus
     *
     * @param string $filter
     * @param string $languageId
     * @param string $groupId
     * @return array
     */
	public function getMenusQB($filter, $languageId, $groupId)
	{
		$qb = $this->createQueryBuilder('a')
            ->join('a.language', 'l')
            ->join('a.series', 's')
            ->leftJoin('a.article', 'art')
            ->Where('a.menu IS NULL');

        $this->addNameFilterQB($qb, $filter);
        $this->addLanguageIdFilterQB($qb, $languageId);
        $this->addGroupFilterQB($qb, $groupId);

        $qb->orderBy('a.sequence');

		return $qb->getQuery()->getResult();
	}

    /**
     * Get public menus
     *
     * @param string $locale
     * @return object
     */
    public function getPublicMenus($locale)
    {
        $qb = $this->createQueryBuilder('a')
            ->select('a, s, art')
            ->join('a.language', 'l')
            ->join('a.series', 's')
            ->leftJoin('a.article', 'art')
            ->leftJoin('a.menu', 'm')
            ->where('a.isPublic = true')
            ->andWhere('l.alias = :locale')
            ->andWhere('art.isPublic = true')
            ->setParameter('locale', $locale)
            ->orderBy('m.sequence, a.sequence');

        return $qb->getQuery()->getResult();
    }
}
