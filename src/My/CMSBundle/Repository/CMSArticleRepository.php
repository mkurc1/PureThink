<?php

namespace My\CMSBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CMSArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CMSArticleRepository extends EntityRepository
{
    /**
     * Get articles
     *
     * @param string $order
     * @param string $sequence
     * @param string $filtr
     * @param string $languageId
     * @param string $groupId
     * @return array
     */
	public function getArticles($order, $sequence, $filtr, $languageId, $groupId)
	{
		$qb = $this->createQueryBuilder('a')
            ->leftJoin('a.language', 'l')
            ->leftJoin('a.series', 's')
            ->where('a.name LIKE :filtr')
            ->setParameter('filtr', '%'.$filtr.'%');

        if ($languageId) {
            $qb->andWhere('l.id = :languageId')
                ->setParameter('languageId', $languageId);
        }

        if ($groupId) {
            $qb->andWhere('s.id = :groupId')
                ->setParameter('groupId', $groupId);
        }

        $qb->orderBy($order, $sequence);

		return $qb->getQuery();
	}

    /**
     * Search
     *
     * @param string $locale
     * @param string $search
     * @return array
     */
    public function search($locale, $search)
    {
        $qb = $this->createQueryBuilder('a')
            ->leftJoin('a.language', 'l')
            ->where('a.isPublic = true')
            ->andWhere('l.alias = :locale')
            ->setParameter('locale', $locale)
            ->andWhere('a.name LIKE :search')
            ->setParameter('search', '%'.$search.'%');

        return $qb->getQuery()->getResult();
    }
}
